"<AddOnInstructionDefinition CreatedBy=\"Not Available\" CreatedDate=\"2008-04-03T19:38:05.264Z\" EditedBy=\"PROCESS\\Library\" EditedDate=\"2016-12-13T19:20:51.862Z\" ExecuteEnableInFalse=\"true\" ExecutePostscan=\"false\" ExecutePrescan=\"true\" Name=\"P_Perm\" Revision=\"3.5\" RevisionExtension=\"05 Release\" SoftwareRevision=\"v18.02\" Vendor=\"Rockwell Automation\">\n<Description>\n<CData>\nPermissives\n</CData>\n</Description>\n<RevisionNote>\n<CData>\nSee V3.5-xx Release Notes for details. Changed Nav Tags to user-defined STRING_NavTag type.\n</CData>\n</RevisionNote>\n<AdditionalHelpText>\n<CData>\nCopyright \u00a9 Rockwell Automation, Inc.  All Rights Reserved.\n\nThis Instruction monitors up to 16 Permissive conditions.  It provides these features:\n\n*  The \"OK\" state of each Permissive Input is configurable.  By default,\n    each Input is 1 when OK to start, 0 when not OK to start.\n*  Permissives may be configured as Bypassable.  A separate Sts_NBPermOK \n    (Non-Bypassable Permissives OK) status is provided, which the destination\n    object can use for Bypass, Maintenance and other functions,\n    where Bypassable Permissives can be ignored.\n\nAll Permissive Inputs must be in their configured \"OK\" states\nfor the P_Perm instruction to provide a \"PermOK\" status.\n\nAll non-bypassable Permissive inputs must be in their configured \"OK\" states\nfor the P_Perm instruction to provide a \"NBPermOK\" status.\n\nFor each Permissive condition, a Tag may be defined for navigation. Clicking\nthe Permissive description will call up the associated Tag's Faceplate.\n\n</CData>\n</AdditionalHelpText>\n<Parameters>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read Only\" Name=\"EnableIn\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nEnable Input - System Defined Parameter\n</CData>\n</Description>\n</Parameter>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read Only\" Name=\"EnableOut\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Output\" Visible=\"false\">\n<Description>\n<CData>\nEnable Output - System Defined Parameter\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.0\" ExternalAccess=\"Read/Write\" Name=\"Inp_Perm00\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\nPermissive Cond 00, OK to start if in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.1\" ExternalAccess=\"Read/Write\" Name=\"Inp_Perm01\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\nPermissive Cond 01, OK to start if in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.2\" ExternalAccess=\"Read/Write\" Name=\"Inp_Perm02\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\nPermissive Cond 02, OK to start if in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.3\" ExternalAccess=\"Read/Write\" Name=\"Inp_Perm03\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\nPermissive Cond 03, OK to start if in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.4\" ExternalAccess=\"Read/Write\" Name=\"Inp_Perm04\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\nPermissive Cond 04, OK to start if in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.5\" ExternalAccess=\"Read/Write\" Name=\"Inp_Perm05\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\nPermissive Cond 05, OK to start if in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.6\" ExternalAccess=\"Read/Write\" Name=\"Inp_Perm06\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\nPermissive Cond 06, OK to start if in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.7\" ExternalAccess=\"Read/Write\" Name=\"Inp_Perm07\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\nPermissive Cond 07, OK to start if in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.8\" ExternalAccess=\"Read/Write\" Name=\"Inp_Perm08\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nPermissive Cond 08, OK to start if in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.9\" ExternalAccess=\"Read/Write\" Name=\"Inp_Perm09\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nPermissive Cond 09, OK to start if in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.10\" ExternalAccess=\"Read/Write\" Name=\"Inp_Perm10\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nPermissive Cond 10, OK to start if in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.11\" ExternalAccess=\"Read/Write\" Name=\"Inp_Perm11\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nPermissive Cond 11, OK to start if in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.12\" ExternalAccess=\"Read/Write\" Name=\"Inp_Perm12\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nPermissive Cond 12, OK to start if in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.13\" ExternalAccess=\"Read/Write\" Name=\"Inp_Perm13\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nPermissive Cond 13, OK to start if in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.14\" ExternalAccess=\"Read/Write\" Name=\"Inp_Perm14\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nPermissive Cond 14, OK to start if in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.15\" ExternalAccess=\"Read/Write\" Name=\"Inp_Perm15\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nPermissive Cond 15, OK to start if in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read/Write\" Name=\"Inp_BypActive\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\n1=Permissive Bypassing is currently active\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"0\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"INT\" ExternalAccess=\"Read/Write\" Name=\"Cfg_OKState\" Radix=\"Binary\" Required=\"false\" TagType=\"Base\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nBits indicate which state (0 or 1) of each input is OK to start\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n-1\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#1111_1111_1111_1111\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"INT\" ExternalAccess=\"Read/Write\" Name=\"Cfg_Bypassable\" Radix=\"Binary\" Required=\"false\" TagType=\"Base\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nSet bits indicate which conditions can be bypassed\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"INT\" ExternalAccess=\"Read/Write\" Name=\"Cfg_HasNav\" Radix=\"Binary\" Required=\"false\" TagType=\"Base\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nSet bits indicate which Navigation buttons are enabled\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.0\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass00\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 00: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.1\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass01\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 0`: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.2\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass02\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 02: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.3\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass03\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 03: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.4\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass04\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 04: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.5\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass05\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 05: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.6\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass06\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 06: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.7\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass07\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 07: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.8\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass08\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 08: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.9\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass09\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 09: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.10\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass10\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 10: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.11\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass11\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 11: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.12\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass12\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 12: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.13\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass13\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 13: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.14\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass14\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 14: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.15\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass15\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 15: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read Only\" Name=\"Sts_PermOK\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Output\" Visible=\"true\">\n<Description>\n<CData>\nOverall Permissive Status (1=OK to start)\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n1\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"1\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read Only\" Name=\"Sts_NBPermOK\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Output\" Visible=\"true\">\n<Description>\n<CData>\nNon-Bypassable Permissive Status (1 =all non- bypassable Permissives OK to start)\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n1\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"1\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read Only\" Name=\"Sts_BypActive\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Output\" Visible=\"false\">\n<Description>\n<CData>\n1=Permissive Bypassing is Active (ignore bypassable permissives)\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"0\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"INT\" ExternalAccess=\"Read Only\" Name=\"Sts_Perm\" Radix=\"Binary\" Required=\"false\" TagType=\"Base\" Usage=\"Output\" Visible=\"true\">\n<Description>\n<CData>\nIndividual Permissive Status (1=OK, 0=don't start)\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n-1\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#1111_1111_1111_1111\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read/Write\" Name=\"P_Perm\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Output\" Visible=\"false\">\n<Description>\n<CData>\nUnique Parameter Name for auto - discovery\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"0\"/>\n</DefaultData>\n</Parameter>\n</Parameters>\n<LocalTags>\n<LocalTag DataType=\"STRING_20\" Dimensions=\"16\" ExternalAccess=\"Read/Write\" Name=\"Cfg_CondTxt\">\n<Description>\n<CData>\nShort HMI description of Permissive Conditions\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n[[20,'Enter Descriptionn</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<Array DataType=\"STRING_20\" Dimensions=\"16\">\n<Element Index=\"[0]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"20\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n'Enter Description #0'\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[1]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[2]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[3]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[4]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[5]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[6]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[7]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[8]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[9]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[10]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[11]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[12]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[13]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[14]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[15]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n</Array>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"INT\" ExternalAccess=\"Read/Write\" Name=\"Wrk_Inp\" Radix=\"Binary\">\n<Description>\n<CData>\nCollection copy of Inp_PermXXs\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n-1\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#1111_1111_1111_1111\"/>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"INT\" ExternalAccess=\"None\" Name=\"Wrk_Bypass\" Radix=\"Binary\">\n<Description>\n<CData>\nWorking Register for Bypassable Permissives\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"SINT\" ExternalAccess=\"Read/Write\" Name=\"Inf_Tab\" Radix=\"Decimal\">\n<Description>\n<CData>\nTab to display (FTView ME)\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"SINT\" Radix=\"Decimal\" Value=\"0\"/>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"INT\" ExternalAccess=\"None\" Name=\"Wrk_InpInv\" Radix=\"Binary\">\n<Description>\n<CData>\nInput states after inverting based on Cfg_OKState\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"STRING_16\" ExternalAccess=\"Read Only\" Name=\"Inf_Type\">\n<Description>\n<CData>\nType identifier for HMI navigation\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n[6,'P_Perm$00$00$00$00$00$00$00$00$00$00']\n</CData>\n</DefaultData>\n<DefaultData Format=\"String\" Length=\"6\">\n<CData>\n'P_Perm'\n</CData>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"STRING_20\" ExternalAccess=\"Read/Write\" Name=\"Cfg_Label\">\n<Description>\n<CData>\nLabel for graphic symbol displayed on HMI\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n[11,'Permissives$00$00$00$00$00$00$00$00$00']\n</CData>\n</DefaultData>\n<DefaultData Format=\"String\" Length=\"11\">\n<CData>\n'Permissives'\n</CData>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"STRING_20\" ExternalAccess=\"Read/Write\" Name=\"Cfg_Tag\">\n<Description>\n<CData>\nTagname for display on HMI\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n[6,'P_Perm$00$00$00$00$00$00$00$00$00$00$00$00$00$00']\n</CData>\n</DefaultData>\n<DefaultData Format=\"String\" Length=\"6\">\n<CData>\n'P_Perm'\n</CData>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"STRING_40\" ExternalAccess=\"Read/Write\" Name=\"Cfg_Desc\">\n<Description>\n<CData>\nDescription for display on HMI\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n[11,'Permissives$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']\n</CData>\n</DefaultData>\n<DefaultData Format=\"String\" Length=\"11\">\n<CData>\n'Permissives'\n</CData>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"STRING_NavTag\" Dimensions=\"16\" ExternalAccess=\"Read/Write\" Name=\"Cfg_NavTag\">\n<Description>\n<CData>\nTagnames for destinations of Navigation buttons\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\nn</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<Array DataType=\"STRING_NavTag\" Dimensions=\"16\">\n<Element Index=\"[0]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[1]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[2]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[3]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[4]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[5]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[6]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[7]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[8]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[9]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[10]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[11]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[12]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[13]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[14]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[15]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n</Array>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"STRING_12\" ExternalAccess=\"Read Only\" Name=\"Inf_Lib\">\n<Description>\n<CData>\nDisplay Library for Faceplate call-up\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n[6,'RA-BAS$00$00$00$00$00$00']\n</CData>\n</DefaultData>\n<DefaultData Format=\"String\" Length=\"6\">\n<CData>\n'RA-BAS'\n</CData>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"INT\" ExternalAccess=\"Read/Write\" Name=\"Wrk_MSet\" Radix=\"Binary\">\n<Description>\n<CData>\nInternal copy of individual condition Maint. Bypass toggles\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</LocalTag>\n</LocalTags>\n<Routines>\n<Routine Name=\"EnableInFalse\" Type=\"RLL\">\n<Description>\n<CData>\nSet summary \"OK\" Status bits to FALSE (0)\n</CData>\n</Description>\n<RLLContent>\n<Rung Number=\"0\" Type=\"N\">\n<Comment>\n<CData>\n============================================================\nOFF-SCAN (EnableIn is False) STATUS\n============================================================\nIf this Permissives instruction is OFF-SCAN (rung is false or EnableIn is false in FBD),\nthen set the summary Permissive OK Status bits to FALSE (0).\n</CData>\n</Comment>\n<Text>\n<CData>\nOTU(Sts_PermOK)OTU(Sts_NBPermOK);\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"1\" Type=\"N\">\n<Comment>\n<CData>\n#####  V3.1-00  2014-06-30:  Added Rung for INDIVIDUAL bypassing  #####\n\nIndividual Permissive Bypasses can only be set for conditions that are\nconfigured as Bypassable.  This AND clears all the MSets for inputs\nthat are NOT Bypassable.\n</CData>\n</Comment>\n<Text>\n<CData>\nAND(Wrk_MSet,Cfg_Bypassable,Wrk_MSet);\n</CData>\n</Text>\n</Rung>\n</RLLContent>\n</Routine>\n<Routine Name=\"Logic\" Type=\"RLL\">\n<Description>\n<CData>\nCheck Permissive Conditions\n</CData>\n</Description>\n<RLLContent>\n<Rung Number=\"0\" Type=\"N\">\n<Comment>\n<CData>\nCopyright \u00a9 Rockwell Automation, Inc.  All Rights Reserved.\n============================================================\nP_Perm:  PROCESS -- PERMISSIVES\n============================================================\nRevision 3.5-05 Release  2016-12-16:  See V3.5-xx Release Notes for details.\nV1.x and V2.x Revision History archived.\nV3.0-00  2013-06-30:  Added Cfg_HasNav bits and Cfg_NavTag strings\nfor navigation.\nV3.1-00  2014-06-30:  Modified to allow Maintenance to set up bypassing\nof individual permissive conditions.\nV3.1-01  2014-09-03:  Unmodified, up-rev only for V3.1-01 public release.\nV3.5-01  2016-01-29:  Unmodified, up-rev only for V3.5-01 Release.\nV3.5-05  2016-12-16:  Changed Nav Tags to user-defined STRING_NavTag type.\n============================================================\nThis Instruction monitors up to 16 Permissive conditions.  It provides these features:\n\n*  The \"OK\" state of each Permissive Input is configurable.  By default,\neach Input is 1 when OK to start, 0 when not OK to start.\n*  Permissives may be configured as Bypassable.  A separate Sts_NBPermOK \n(Non-Bypassable Permissives OK) status is provided, which the destination\nobject can use forBypass, Maintenance and other functions,\nwhere Bypassable Permissives can be ignored.\n\nAll Permissive Inputs must be in their configured \"OK\" states\nfor the P_Perm instruction to provide a \"PermOK\" status.\n\nAll non-bypassable Permissive inputs must be in their configured \"OK\" states\nfor the P_Perm instruction to provide a \"NBPermOK\" status.\n\nFor each Permissive condition, a Tag may be defined for navigation. Clicking\nthe Permissive description will call up the associated Tag's Faceplate.\n============================================================\nSHOW LOCAL STRINGS\n============================================================\nThe STRINGs containing the text associated with each instance of this\ninstruction cannot be Input or Output Parameters, because STRINGs are not\n 'atomic' types. (Inputs and Outputs must be SINT, INT, DINT, REAL, or BOOL.)\n\nIn order to make it easier to find and configure these STRINGs, this rung\nwas added.  THE JMP (and the LBL on the following rung)\nMUST NOT BE REMOVED!!!\n\nTo view the STRINGs, go to the instruction instance (in LD or FBD), RIGHT-click\nto bring up the context menu and select \"Open Instruction Logic\".\nThis rung will appear with the STRING values for the selected instance.\nYou may double-click the STRING values here to modify them as well.\n\n#####  V3.0-00  2013-06-30:  Added Cfg_NavTag strings on this rung  #####\n</CData>\n</Comment>\n<Text>\n<CData>\nJMP(SkipText)[CONCAT(Cfg_Desc,Cfg_Label,Cfg_Tag) LOWER(Cfg_CondTxt[0],Cfg_CondTxt[1]) LOWER(Cfg_CondTxt[2],Cfg_CondTxt[3]) LOWER(Cfg_CondTxt[4],Cfg_CondTxt[5]) LOWER(Cfg_CondTxt[6],Cfg_CondTxt[7]) ,LOWER(Cfg_CondTxt[8],Cfg_CondTxt[9]) LOWER(Cfg_CondTxt[10],Cfg_CondTxt[11]) LOWER(Cfg_CondTxt[12],Cfg_CondTxt[13]) LOWER(Cfg_CondTxt[14],Cfg_CondTxt[15]) ,LOWER(Cfg_NavTag[0],Cfg_NavTag[1]) LOWER(Cfg_NavTag[2],Cfg_NavTag[3]) LOWER(Cfg_NavTag[4],Cfg_NavTag[5]) LOWER(Cfg_NavTag[6],Cfg_NavTag[7]) ,LOWER(Cfg_NavTag[8],Cfg_NavTag[9]) LOWER(Cfg_NavTag[10],Cfg_NavTag[11]) LOWER(Cfg_NavTag[12],Cfg_NavTag[13]) LOWER(Cfg_NavTag[14],Cfg_NavTag[15]) LOWER(Inf_Lib,Inf_Type) ];\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"1\" Type=\"N\">\n<Comment>\n<CData>\n============================================================\nINPUT GATHERING\n============================================================\nThis object uses word-wise logic.  The 16 permissive inputs are aliased\nto the Wrk_Inp word, so no logic is needed to collect the individual\nconditions.  We can immediately start processing the permissive logic.\n============================================================\nHANDLE \"OK STATE\" INVERSIONS\n============================================================\nThis rung inverts the Input bits whose \"OK State\" is 1 (0 to Run).\nThe resulting Wrk_Inp word is ALL ONES if all permissive inputs are \"OK\".\n</CData>\n</Comment>\n<Text>\n<CData>\nLBL(SkipText)CPT(Wrk_InpInv,Wrk_Inp XOR(NOT(Cfg_OKState)));\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"2\" Type=\"N\">\n<Comment>\n<CData>\n============================================================\nPERMISSIVE PROCESSING\n============================================================\n#####  V3.1-00  2014-06-30:  Added Rung for INDIVIDUAL bypassing  #####\n\nIndividual Permissive Bypasses can only be set for conditions that are\nconfigured as Bypassable.  The AND clears all the MSets for inputs\nthat are NOT Bypassable.\n\nIf an input is Bypassed, or the input is ON, that bit is OK as far as\nBypassable Permissives are concerned.\n</CData>\n</Comment>\n<Text>\n<CData>\nAND(Wrk_MSet,Cfg_Bypassable,Wrk_MSet)OR(Wrk_MSet,Wrk_InpInv,Wrk_Bypass);\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"3\" Type=\"N\">\n<Comment>\n<CData>\n============================================================\nSTATUS GENERATION\n============================================================\nThese rungs generate the public Status for this object.\n\nThe Input Permissive conditions are passed through (wordwise)\ndirectly to the final Permissive Status\n</CData>\n</Comment>\n<Text>\n<CData>\nMOV(Wrk_InpInv,Sts_Perm);\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"4\" Type=\"N\">\n<Comment>\n<CData>\nIf all the Permissive Status bits are ONE, there is no condition to\nprevent starting the affected equipment: show the Permissive Status as \"OK\"\n\nIf all the Non-Bypassable permissives are true, set the NBPermOK Status as \"OK\"\n\nIf Permissive Bypassing is active (this input usually comes from a downstream\ndevice block: motor, valve, etc.), then make this Status known to the HMI.\n</CData>\n</Comment>\n<Text>\n<CData>\n[EQU(Sts_Perm,-1) OTE(Sts_PermOK) ,EQU(Wrk_Bypass,-1) OTE(Sts_NBPermOK) ,XIC(Inp_BypActive) OTE(Sts_BypActive) ];\n</CData>\n</Text>\n</Rung>\n</RLLContent>\n</Routine>\n<Routine Name=\"Prescan\" Type=\"RLL\">\n<Description>\n<CData>\nOn powerup, clear individual bypass enables for non-bypassable permissives.\n</CData>\n</Description>\n<RLLContent>\n<Rung Number=\"0\" Type=\"N\">\n<Comment>\n<CData>\n============================================================\nPRESCAN (POWERUP) HANDLING\n============================================================\nOn powerup, clear individual bypass enables for non-bypassable permissives.\n#####  V3.1-00  2014-06-30:  Added Prescan ROUTINE to support INDIVIDUAL bypassing  #####\n\nIndividual Permissive Bypasses can only be set for conditions that are\nconfigured as Bypassable.  This AND clears all the MSets for inputs\nthat are NOT Bypassable.\n</CData>\n</Comment>\n<Text>\n<CData>\nAND(Wrk_MSet,Cfg_Bypassable,Wrk_MSet);\n</CData>\n</Text>\n</Rung>\n</RLLContent>\n</Routine>\n</Routines>\n<Dependencies>\n<Dependency Name=\"STRING_20\" Type=\"DataType\"/>\n<Dependency Name=\"STRING_40\" Type=\"DataType\"/>\n<Dependency Name=\"STRING_NavTag\" Type=\"DataType\"/>\n<Dependency Name=\"STRING_12\" Type=\"DataType\"/>\n</Dependencies>\n</AddOnInstructionDefinition>"