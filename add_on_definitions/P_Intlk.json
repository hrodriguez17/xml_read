"<AddOnInstructionDefinition CreatedBy=\"Not Available\" CreatedDate=\"2008-04-02T16:58:50.551Z\" EditedBy=\"PROCESS\\Library\" EditedDate=\"2016-12-14T16:15:29.731Z\" ExecuteEnableInFalse=\"true\" ExecutePostscan=\"false\" ExecutePrescan=\"true\" Name=\"P_Intlk\" Revision=\"3.5\" RevisionExtension=\"05 Release\" SoftwareRevision=\"v18.02\" Vendor=\"Rockwell Automation\">\n<Description>\n<CData>\nInterlocks\n</CData>\n</Description>\n<RevisionNote>\n<CData>\nSee V3.5-xx Release Notes for details. Changed Nav Tags to user-defined STRING_NavTag type. Modified to maintain First Out indication until next stop.\n</CData>\n</RevisionNote>\n<AdditionalHelpText>\n<CData>\nCopyright \u00a9 Rockwell Automation, Inc.  All Rights Reserved.\n\nThis Instruction monitors up to 16 Interlock conditions.  It provides these features:\n\n*  The \"OK\" state of each Interlock Input is configurable.  By default,\n    each Input is 1 to trip, 0 when OK to run.\n*  Interlocks may be configured as Latched.  Latched Interlocks\n    require a Reset Command to clear.  The latching function can be\n    inhibited via a Latch Defeat input, for example, to avoid latching\n    Interlocks for a stopped motor.\n*  Interlocks may be configured as Bypassable; Non-Bypassable\n    Interlocks are reported separately so the destination object can\n    decide whether to bypass (ignore) bypassable interlocks, such\n    as in Maintenance Mode.\n*  First-Out reporting indicates the first condition that caused the\n    running equipment to be tripped.\n*  For each Interlock condition, a Tag may be defined for navigation.\n    Clicking the Interlock description will call up the associated Tag's\n    Faceplate.\n\n</CData>\n</AdditionalHelpText>\n<Parameters>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read Only\" Name=\"EnableIn\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nEnable Input - System Defined Parameter\n</CData>\n</Description>\n</Parameter>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read Only\" Name=\"EnableOut\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Output\" Visible=\"false\">\n<Description>\n<CData>\nEnable Output - System Defined Parameter\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.0\" ExternalAccess=\"Read/Write\" Name=\"Inp_Intlk00\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\nInterlock Cond. 00, Stop if not in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.1\" ExternalAccess=\"Read/Write\" Name=\"Inp_Intlk01\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\nInterlock Cond. 01, Stop if not in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.2\" ExternalAccess=\"Read/Write\" Name=\"Inp_Intlk02\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\nInterlock Cond. 02, Stop if not in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.3\" ExternalAccess=\"Read/Write\" Name=\"Inp_Intlk03\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\nInterlock Cond. 03, Stop if not in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.4\" ExternalAccess=\"Read/Write\" Name=\"Inp_Intlk04\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\nInterlock Cond. 04, Stop if not in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.5\" ExternalAccess=\"Read/Write\" Name=\"Inp_Intlk05\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\nInterlock Cond. 05, Stop if not in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.6\" ExternalAccess=\"Read/Write\" Name=\"Inp_Intlk06\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\nInterlock Cond. 06, Stop if not in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.7\" ExternalAccess=\"Read/Write\" Name=\"Inp_Intlk07\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\nInterlock Cond. 07, Stop if not in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.8\" ExternalAccess=\"Read/Write\" Name=\"Inp_Intlk08\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nInterlock Cond. 08, Stop if not in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.9\" ExternalAccess=\"Read/Write\" Name=\"Inp_Intlk09\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nInterlock Cond. 09, Stop if not in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.10\" ExternalAccess=\"Read/Write\" Name=\"Inp_Intlk10\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nInterlock Cond. 10, Stop if not in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.11\" ExternalAccess=\"Read/Write\" Name=\"Inp_Intlk11\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nInterlock Cond. 11, Stop if not in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.12\" ExternalAccess=\"Read/Write\" Name=\"Inp_Intlk12\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nInterlock Cond. 12, Stop if not in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.13\" ExternalAccess=\"Read/Write\" Name=\"Inp_Intlk13\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nInterlock Cond. 13, Stop if not in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.14\" ExternalAccess=\"Read/Write\" Name=\"Inp_Intlk14\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nInterlock Cond. 14, Stop if not in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_Inp.15\" ExternalAccess=\"Read/Write\" Name=\"Inp_Intlk15\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nInterlock Cond. 15, Stop if not in configured OK state\n</CData>\n</Description>\n</Parameter>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read/Write\" Name=\"Inp_BypActive\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\n1=Interlock Bypassing is currently active\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"0\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read/Write\" Name=\"Inp_LatchDefeat\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\nLatch Defeat 1=Do\nnot latch inputs even if configured for latching\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"0\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read/Write\" Name=\"Inp_Reset\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Input\" Visible=\"true\">\n<Description>\n<CData>\n1=Reset Latched Interlocks and First-Out\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"0\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"INT\" ExternalAccess=\"Read/Write\" Name=\"Cfg_OKState\" Radix=\"Binary\" Required=\"false\" TagType=\"Base\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nBits indicate which state (0 or 1) of each input is OK to run\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"INT\" ExternalAccess=\"Read/Write\" Name=\"Cfg_Latched\" Radix=\"Binary\" Required=\"false\" TagType=\"Base\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nSet bits indicate which conditions are latched (sealed in)\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"INT\" ExternalAccess=\"Read/Write\" Name=\"Cfg_Bypassable\" Radix=\"Binary\" Required=\"false\" TagType=\"Base\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nSet bits indicate which conditions can be bypassed\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"INT\" ExternalAccess=\"Read/Write\" Name=\"Cfg_HasNav\" Radix=\"Binary\" Required=\"false\" TagType=\"Base\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nSet bits indicate which Navigation buttons are enabled\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read/Write\" Name=\"Cfg_PCmdClear\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\n1=Clear Program Commands on receipt\n0=Leave Set\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n1\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"1\"/>\n</DefaultData>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.0\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass00\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 00: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.1\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass01\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 0`: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.2\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass02\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 02: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.3\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass03\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 03: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.4\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass04\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 04: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.5\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass05\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 05: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.6\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass06\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 06: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.7\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass07\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 07: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.8\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass08\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 08: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.9\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass09\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 09: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.10\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass10\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 10: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.11\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass11\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 11: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.12\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass12\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 12: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.13\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass13\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 13: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.14\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass14\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 14: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter AliasFor=\"Wrk_MSet.15\" ExternalAccess=\"Read/Write\" Name=\"MSet_Bypass15\" Radix=\"Decimal\" Required=\"false\" TagType=\"Alias\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nMaint. Bypass Toggle for Interlock Cond. 15: 1=Bypass\n</CData>\n</Description>\n</Parameter>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read/Write\" Name=\"PCmd_Reset\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nProgram Command to Reset Latched Interlocks\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"0\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read/Write\" Name=\"OCmd_Reset\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Input\" Visible=\"false\">\n<Description>\n<CData>\nOperator Command to Reset Latched Interlocks\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"0\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read Only\" Name=\"Sts_IntlkOK\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Output\" Visible=\"true\">\n<Description>\n<CData>\nOverall Interlock Status (1=OK to run, 0=Stop)\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n1\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"1\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read Only\" Name=\"Sts_NBIntlkOK\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Output\" Visible=\"true\">\n<Description>\n<CData>\nNon-Bypassable Interlock Status (1=All NB Interlocks OK to run)\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n1\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"1\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read Only\" Name=\"Sts_BypActive\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Output\" Visible=\"false\">\n<Description>\n<CData>\n1=Interlock Bypassing is Active (ignore bypassable interlocks)\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"0\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"INT\" ExternalAccess=\"Read Only\" Name=\"Sts_Intlk\" Radix=\"Binary\" Required=\"false\" TagType=\"Base\" Usage=\"Output\" Visible=\"true\">\n<Description>\n<CData>\nIndividual Interlock Status (1=Stop, 0=OK)\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"INT\" ExternalAccess=\"Read Only\" Name=\"Sts_FirstOut\" Radix=\"Binary\" Required=\"false\" TagType=\"Base\" Usage=\"Output\" Visible=\"true\">\n<Description>\n<CData>\nInterlock First Out Status (bit 1 is First Not-OK condition)\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read Only\" Name=\"Rdy_Reset\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Output\" Visible=\"false\">\n<Description>\n<CData>\n1=Ready to receive OCmd_Reset (reset required)\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"0\"/>\n</DefaultData>\n</Parameter>\n<Parameter DataType=\"BOOL\" ExternalAccess=\"Read/Write\" Name=\"P_Intlk\" Radix=\"Decimal\" Required=\"false\" TagType=\"Base\" Usage=\"Output\" Visible=\"false\">\n<Description>\n<CData>\nUnique Parameter Name for auto - discovery\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"0\"/>\n</DefaultData>\n</Parameter>\n</Parameters>\n<LocalTags>\n<LocalTag DataType=\"STRING_20\" Dimensions=\"16\" ExternalAccess=\"Read/Write\" Name=\"Cfg_CondTxt\">\n<Description>\n<CData>\nShort HMI description of Interlock Conditions\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n[[20,'Enter Descriptionn</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<Array DataType=\"STRING_20\" Dimensions=\"16\">\n<Element Index=\"[0]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"20\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n'Enter Description #0'\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[1]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[2]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[3]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[4]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[5]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[6]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[7]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[8]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[9]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[10]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[11]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[12]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[13]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[14]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[15]\">\n<Structure DataType=\"STRING_20\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_20\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n</Array>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"INT\" ExternalAccess=\"Read/Write\" Name=\"Wrk_Inp\" Radix=\"Binary\">\n<Description>\n<CData>\nCollection copy of Inp_IntlkXXs\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"INT\" ExternalAccess=\"None\" Name=\"Wrk_NB\" Radix=\"Binary\">\n<Description>\n<CData>\nWorking register for Non-Bypassable Interlock ogic\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"INT\" ExternalAccess=\"None\" Name=\"Wrk_Intlk\" Radix=\"Binary\">\n<Description>\n<CData>\nWorking register for Interlock logic\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"INT\" ExternalAccess=\"None\" Name=\"Wrk_FirstOut\" Radix=\"Binary\">\n<Description>\n<CData>\nWorking register for First Out logic\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"INT\" ExternalAccess=\"None\" Name=\"Wrk_Sts\" Radix=\"Binary\">\n<Description>\n<CData>\nWorking register for generating Interlock status\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"INT\" ExternalAccess=\"None\" Name=\"Wrk_PrevSts\" Radix=\"Binary\">\n<Description>\n<CData>\nInterlock Status previous scan\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"BOOL\" ExternalAccess=\"None\" Name=\"Wrk_LatchEnable\" Radix=\"Decimal\">\n<Description>\n<CData>\n1=Latch interlock if configured to latch, 0=don't latch\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n1\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"1\"/>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"SINT\" ExternalAccess=\"Read/Write\" Name=\"Inf_Tab\" Radix=\"Decimal\">\n<Description>\n<CData>\nTab to display (FTView ME)\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"SINT\" Radix=\"Decimal\" Value=\"0\"/>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"INT\" ExternalAccess=\"None\" Name=\"Wrk_InpInv\" Radix=\"Binary\">\n<Description>\n<CData>\nInput states after inversion based on Cfg_OKState\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"STRING_16\" ExternalAccess=\"Read Only\" Name=\"Inf_Type\">\n<Description>\n<CData>\nType identifier for HMI navigation\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n[7,'P_Intlk$00$00$00$00$00$00$00$00$00']\n</CData>\n</DefaultData>\n<DefaultData Format=\"String\" Length=\"7\">\n<CData>\n'P_Intlk'\n</CData>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"STRING_20\" ExternalAccess=\"Read/Write\" Name=\"Cfg_Label\">\n<Description>\n<CData>\nLabel for graphic symbol displayed on HMI\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n[10,'Interlocks$00$00$00$00$00$00$00$00$00$00']\n</CData>\n</DefaultData>\n<DefaultData Format=\"String\" Length=\"10\">\n<CData>\n'Interlocks'\n</CData>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"STRING_20\" ExternalAccess=\"Read/Write\" Name=\"Cfg_Tag\">\n<Description>\n<CData>\nTagname for display on HMI\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n[7,'P_Intlk$00$00$00$00$00$00$00$00$00$00$00$00$00']\n</CData>\n</DefaultData>\n<DefaultData Format=\"String\" Length=\"7\">\n<CData>\n'P_Intlk'\n</CData>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"STRING_40\" ExternalAccess=\"Read/Write\" Name=\"Cfg_Desc\">\n<Description>\n<CData>\nDescription for display on HMI\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n[25,'Interlocks with First Out$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']\n</CData>\n</DefaultData>\n<DefaultData Format=\"String\" Length=\"25\">\n<CData>\n'Interlocks with First Out'\n</CData>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"STRING_NavTag\" Dimensions=\"16\" ExternalAccess=\"Read/Write\" Name=\"Cfg_NavTag\">\n<Description>\n<CData>\nTagnames for destinations of Navigation buttons\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\nn</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<Array DataType=\"STRING_NavTag\" Dimensions=\"16\">\n<Element Index=\"[0]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[1]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[2]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[3]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[4]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[5]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[6]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[7]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[8]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[9]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[10]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[11]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[12]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[13]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[14]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n<Element Index=\"[15]\">\n<Structure DataType=\"STRING_NavTag\">\n<DataValueMember DataType=\"DINT\" Name=\"LEN\" Radix=\"Decimal\" Value=\"0\"/>\n<DataValueMember DataType=\"STRING_NavTag\" Name=\"DATA\" Radix=\"ASCII\">\n<CData>\n</CData>\n</DataValueMember>\n</Structure>\n</Element>\n</Array>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"STRING_12\" ExternalAccess=\"Read Only\" Name=\"Inf_Lib\">\n<Description>\n<CData>\nDisplay Library for Faceplate call-up\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n[6,'RA-BAS$00$00$00$00$00$00']\n</CData>\n</DefaultData>\n<DefaultData Format=\"String\" Length=\"6\">\n<CData>\n'RA-BAS'\n</CData>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"INT\" ExternalAccess=\"Read/Write\" Name=\"Wrk_MSet\" Radix=\"Binary\">\n<Description>\n<CData>\nInternal copy of individual condition Maint. Bypass toggles\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"INT\" Radix=\"Binary\" Value=\"2#0000_0000_0000_0000\"/>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"BOOL\" ExternalAccess=\"None\" Name=\"Wrk_NonIntlkStop\" Radix=\"Decimal\">\n<Description>\n<CData>\nOne-Shot store: Stop OTHER than Interlock Stop occurred.\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"0\"/>\n</DefaultData>\n</LocalTag>\n<LocalTag DataType=\"BOOL\" ExternalAccess=\"None\" Name=\"Wrk_SetFirstOut\" Radix=\"Decimal\">\n<Description>\n<CData>\nOne-Shot store: First Out update triggered\n</CData>\n</Description>\n<DefaultData Format=\"L5K\">\n<CData>\n0\n</CData>\n</DefaultData>\n<DefaultData Format=\"Decorated\">\n<DataValue DataType=\"BOOL\" Radix=\"Decimal\" Value=\"0\"/>\n</DefaultData>\n</LocalTag>\n</LocalTags>\n<Routines>\n<Routine Name=\"EnableInFalse\" Type=\"RLL\">\n<Description>\n<CData>\nSet summary \"OK\" Status bits to FALSE (0)\n</CData>\n</Description>\n<RLLContent>\n<Rung Number=\"0\" Type=\"N\">\n<Comment>\n<CData>\n============================================================\nOFF-SCAN (EnableIn is False) STATUS\n============================================================\n Clear \"Lurking\" Commands (received while on false rung).\n</CData>\n</Comment>\n<Text>\n<CData>\nOTU(OCmd_Reset)OTU(PCmd_Reset);\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"1\" Type=\"N\">\n<Comment>\n<CData>\n \nSince we're not processing Operator Commands, we're not READY for them either!\n</CData>\n</Comment>\n<Text>\n<CData>\nOTU(Rdy_Reset);\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"2\" Type=\"N\">\n<Comment>\n<CData>\nIf this Interlocks instruction is OFF-SCAN (rung is false or EnableIn is false in FBD),\nthen set the summary Interlock OK Status bits to FALSE (0).\n</CData>\n</Comment>\n<Text>\n<CData>\nOTU(Sts_IntlkOK)OTU(Sts_NBIntlkOK);\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"3\" Type=\"N\">\n<Comment>\n<CData>\n#####  V3.1-00  2014-06-30:  Added Rung for INDIVIDUAL bypassing  #####\n\nIndividual Interlock Bypasses can only be set for conditions that are\nconfigured as Bypassable.  This AND clears all the MSets for inputs\nthat are NOT Bypassable.\n</CData>\n</Comment>\n<Text>\n<CData>\nAND(Wrk_MSet,Cfg_Bypassable,Wrk_MSet);\n</CData>\n</Text>\n</Rung>\n</RLLContent>\n</Routine>\n<Routine Name=\"Logic\" Type=\"RLL\">\n<Description>\n<CData>\nCheck Interlock Conditions\n</CData>\n</Description>\n<RLLContent>\n<Rung Number=\"0\" Type=\"N\">\n<Comment>\n<CData>\nCopyright \u00a9 Rockwell Automation, Inc.  All Rights Reserved.\n============================================================\nP_Intlk:  PROCESS -- INTERLOCKS\n============================================================\nRevision 3.5-05 Release  2016-12-16:  See V3.5-xx Release Notes for details.\nV1.x and V2.x Revision History archived.\nV3.0-00  2013-06-30:  Added Cfg_HasNav bits and Cfg_NavTag strings\nfor navigation.\nV3.1-00  2014-06-30:  Modified to allow Maintenance to set up bypassing\nof individual interlock conditions.\nV3.1-01  2014-09-03:  Unmodified, up-rev only for V3.1-01 public release.\nV3.5-01  2016-01-29:  Unmodified, up-rev only for V3.5.01 Release.\nV3.5-05  2016-12-16:  Changed Nav Tags to user-defined STRING_NavTag type.\nModified logic to maintain First-Out indication until next stop.\n============================================================\nThis Instruction monitors up to 16 Interlock conditions.  It provides these features:\n\n*  The \"OK\" state of each Interlock Input is configurable.\nBy default, each Input is 1 to trip, 0 when OK to run.\n*  Interlocks may be configured as Latched.  Latched Interlocks\nrequire a Reset Command to clear.  The latching function can be inhibited\nvia a Latch Defeat input, for example, to avoid latching Interlocks for a stopped motor.\n*  Interlocks may be configured as Bypassable.  Bypassable Interlocks are reported\nseparately; the destination object can use this information to bypass these\nInterlocks in Maintenance Mode or upon command.\n*  First-Out reporting indicates the first condition that\ncaused the running equipment to be tripped.\n* For each Interlock condition, a Tag may be defined for navigation. Clicking\nthe Interlock description will call up the associated Tag's Faceplate.\n============================================================\nSHOW LOCAL STRINGS\n============================================================\nThe STRINGs containing the text associated with each instance of this\ninstruction cannot be Input or Output Parameters, because STRINGs are not\n 'atomic' types. (Inputs and Outputs must be SINT, INT, DINT, REAL, or BOOL.)\n\nIn order to make it easier to find and configure these STRINGs, this rung\nwas added.  THE JMP (and the LBL on the following rung)\nMUST NOT BE REMOVED!!!\n\nTo view the STRINGs, go to the instruction instance (in LD or FBD), RIGHT-click\nto bring up the context menu and select \"Open Instruction Logic\".\nThis rung will appear with the STRING values for the selected instance.\nYou may double-click the STRING values here to modify them as well.\n\n#####  V3.0-00  2013-06-30:  Added Cfg_NavTag strings on this rung  #####\n</CData>\n</Comment>\n<Text>\n<CData>\nJMP(SkipText)[CONCAT(Cfg_Desc,Cfg_Label,Cfg_Tag) LOWER(Cfg_CondTxt[0],Cfg_CondTxt[1]) LOWER(Cfg_CondTxt[2],Cfg_CondTxt[3]) LOWER(Cfg_CondTxt[4],Cfg_CondTxt[5]) LOWER(Cfg_CondTxt[6],Cfg_CondTxt[7]) ,LOWER(Cfg_CondTxt[8],Cfg_CondTxt[9]) LOWER(Cfg_CondTxt[10],Cfg_CondTxt[11]) LOWER(Cfg_CondTxt[12],Cfg_CondTxt[13]) LOWER(Cfg_CondTxt[14],Cfg_CondTxt[15]) ,LOWER(Cfg_NavTag[0],Cfg_NavTag[1]) LOWER(Cfg_NavTag[2],Cfg_NavTag[3]) LOWER(Cfg_NavTag[4],Cfg_NavTag[5]) LOWER(Cfg_NavTag[6],Cfg_NavTag[7]) ,LOWER(Cfg_NavTag[8],Cfg_NavTag[9]) LOWER(Cfg_NavTag[10],Cfg_NavTag[11]) LOWER(Cfg_NavTag[12],Cfg_NavTag[13]) LOWER(Cfg_NavTag[14],Cfg_NavTag[15]) LOWER(Inf_Lib,Inf_Type) ];\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"1\" Type=\"N\">\n<Comment>\n<CData>\n============================================================\nINPUT GATHERING   #####  V2.0 2011-09-30  #####\n============================================================\nThis object uses word-wise logic.  The 16 interlock inputs are aliased\nto the Wrk_Inp word, so no logic is needed to collect the individual\nconditions.  We can immediately start processing the interlock logic.\n============================================================\nHANDLE \"OK STATE\" INVERSIONS\n============================================================\nThis rung inverts the Input bits whose \"OK State\" is 1 (0 to Stop).\nThe resulting Wrk_Inp word is ZERO if all interlock inputs are \"OK\".\n</CData>\n</Comment>\n<Text>\n<CData>\nLBL(SkipText)XOR(Wrk_Inp,Cfg_OKState,Wrk_InpInv);\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"2\" Type=\"N\">\n<Comment>\n<CData>\n============================================================\nCOMMAND PROCESSING\n============================================================\nOn receipt of a Reset Command, the output\nInterlock Status (internal copy, actually) is cleared.\n(Later logic may fill this in again if some Interlock conditions are true...)\n\nNOTE:  This object is \"Modeless\" -- Operator and Program Commands\nare accepted at any time.\n</CData>\n</Comment>\n<Text>\n<CData>\n[XIC(PCmd_Reset) [XIC(Cfg_PCmdClear) OTU(PCmd_Reset) ,NOP() ] ,XIC(OCmd_Reset) OTU(OCmd_Reset) ,XIC(Inp_Reset) ]CLR(Wrk_Sts);\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"3\" Type=\"N\">\n<Comment>\n<CData>\nIf the Latch Defeat Input is ON (say, motor not running) and the stored interlock\nstatus is clear (typically, after we get a reset in the rung above),\nswitch to \"not latching\" for all interlock inputs (regardless of Cfg_Latched).\n\nThis has the effect of keeping the Latch Enable work bit ON until a Reset is received.\nHence this is part of the \"reset command processing\" logic....\n</CData>\n</Comment>\n<Text>\n<CData>\nEQU(Wrk_Sts,0)XIC(Inp_LatchDefeat)OTU(Wrk_LatchEnable);\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"4\" Type=\"N\">\n<Comment>\n<CData>\n============================================================\nINTERLOCK PROCESSING\n============================================================\nThis rung clears any bits in the stored Interlock status for which the\nInput bit is OFF and the bit is NOT configured as Latched.\n\nIf the LatchDefeat input in OFF, set the internal Latch Enable work bit.\nIf this bit is ON, don't clear any latched bits with this rung (keep them latched).\nIf this bit is OFF, clear any bits that are NOT on in the input, whether\nconfigured for latching or not!\n</CData>\n</Comment>\n<Text>\n<CData>\n[XIO(Inp_LatchDefeat) OTL(Wrk_LatchEnable) ,XIC(Wrk_LatchEnable) OR(Cfg_Latched,Wrk_InpInv,Wrk_Intlk) ,XIO(Wrk_LatchEnable) MOV(Wrk_InpInv,Wrk_Intlk) ]AND(Wrk_Sts,Wrk_Intlk,Wrk_Sts);\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"5\" Type=\"N\">\n<Comment>\n<CData>\nThis rung SETS Interlock status bits for any Interlock condition Input that is true.\n</CData>\n</Comment>\n<Text>\n<CData>\nOR(Wrk_Sts,Wrk_InpInv,Wrk_Sts);\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"6\" Type=\"N\">\n<Comment>\n<CData>\n#####  V3.1-00  2014-06-30:  Added Rung for INDIVIDUAL bypassing  #####\n\nIndividual Interlock Bypasses can only be set for conditions that are\nconfigured as Bypassable.  This AND clears all the MSets for inputs\nthat are NOT Bypassable.\n\nThe internal Non-Bypassable Interlocks word has bits set only if the Input is TRUE\nAND the bit is configured as a NON-bypassable Interlock OR NOT bypassed..\n</CData>\n</Comment>\n<Text>\n<CData>\nAND(Wrk_MSet,Cfg_Bypassable,Wrk_MSet)NOT(Wrk_MSet,Wrk_NB)AND(Wrk_Sts,Wrk_NB,Wrk_NB);\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"7\" Type=\"N\">\n<Comment>\n<CData>\nIf the Latch Defeat input is true, the equipment stopped.  If the\nequipment stopped and all the interlocks are OK, it was something\nother than an interlock that stopped the equipment.\nIn this case, clear the First Out indication.\n\n#####  V3.5-05  2016-12-16:  Modified to maintain First Out indication until next stop.  #####\n</CData>\n</Comment>\n<Text>\n<CData>\nXIC(Inp_LatchDefeat)ONS(Wrk_NonIntlkStop)[XIO(Inp_BypActive) EQU(Wrk_Sts,0) ,XIC(Inp_BypActive) EQU(Wrk_NB,0) ]CLR(Wrk_FirstOut);\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"8\" Type=\"N\">\n<Comment>\n<CData>\nIf an interlock condition occurs (which interlocks depends on the\nbypass status!) and the Latch Defeat input is NOT set,\nthe equipment is running and will be shut down.\nIf this happens, record the First Out status.\n\n#####  V3.5-05  2016-12-16:  Modified to maintain First Out indication until next stop.  #####\n</CData>\n</Comment>\n<Text>\n<CData>\n[XIO(Inp_BypActive) NEQ(Wrk_Sts,0) ,XIC(Inp_BypActive) NEQ(Wrk_NB,0) ]XIO(Inp_LatchDefeat)ONS(Wrk_SetFirstOut)[XIO(Inp_BypActive) CPT(Wrk_FirstOut,(Wrk_Sts)AND(NOT(Wrk_PrevSts))) ,XIC(Inp_BypActive) CPT(Wrk_FirstOut,(Wrk_NB)AND(NOT(Wrk_PrevSts))) ];\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"9\" Type=\"N\">\n<Comment>\n<CData>\nThe value used for \"First Out\" generation this scan is stored\nas the \"previous\" value for use in the above logic next scan.\n</CData>\n</Comment>\n<Text>\n<CData>\n[XIO(Inp_BypActive) MOV(Wrk_Sts,Wrk_PrevSts) ,XIC(Inp_BypActive) MOV(Wrk_NB,Wrk_PrevSts) ];\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"10\" Type=\"N\">\n<Comment>\n<CData>\n============================================================\nSTATUS GENERATION\n============================================================\nThis rung generates the public Status for this object.\nIf all the Interlock Status bits are zero, there is no condition to\nshut down the affected equipment.  In that case, show the Interlock Status as \"OK\"\n\nSimilar logic applies for the Non-Bypassable Interlocks OK Status.\n\nAlso show the individual Interlock Status bits and the First Out Status bits.\n\nNOTE:  Working registers are used to prevent outside writes to the Sts_xxx\nparameters from affecting the state of this object!\n</CData>\n</Comment>\n<Text>\n<CData>\n[[EQU(Wrk_Sts,0) OTE(Sts_IntlkOK) ,EQU(Wrk_NB,0) OTE(Sts_NBIntlkOK) ] ,XIC(Inp_BypActive) OTE(Sts_BypActive) ,MOV(Wrk_Sts,Sts_Intlk) ,MOV(Wrk_FirstOut,Sts_FirstOut) ];\n</CData>\n</Text>\n</Rung>\n<Rung Number=\"11\" Type=\"N\">\n<Comment>\n<CData>\n============================================================\nCOMMAND READIES\n============================================================\nThis Interlock ojbect is ready for (needs) a RESET Command\nif any Latched Interlocks are SET.\n</CData>\n</Comment>\n<Text>\n<CData>\nCMP((NOT(Wrk_InpInv))AND(Wrk_Sts)AND(Cfg_Latched))OTE(Rdy_Reset);\n</CData>\n</Text>\n</Rung>\n</RLLContent>\n</Routine>\n<Routine Name=\"Prescan\" Type=\"RLL\">\n<Description>\n<CData>\nClear \"lurking\" Commands\n</CData>\n</Description>\n<RLLContent>\n<Rung Number=\"0\" Type=\"N\">\n<Comment>\n<CData>\n============================================================\nPRESCAN (POWERUP) HANDLING\n============================================================\nOn Prescan, clear any \"lurking\" Commands.\n\n#####  V3.5-05  2016-12-16:  Deleted next rung -- redundant with code in Logic routine.  #####\n</CData>\n</Comment>\n<Text>\n<CData>\nOTU(OCmd_Reset)OTU(PCmd_Reset);\n</CData>\n</Text>\n</Rung>\n</RLLContent>\n</Routine>\n</Routines>\n<Dependencies>\n<Dependency Name=\"STRING_20\" Type=\"DataType\"/>\n<Dependency Name=\"STRING_40\" Type=\"DataType\"/>\n<Dependency Name=\"STRING_NavTag\" Type=\"DataType\"/>\n<Dependency Name=\"STRING_12\" Type=\"DataType\"/>\n</Dependencies>\n</AddOnInstructionDefinition>"